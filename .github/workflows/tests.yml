name: Tests

on: [ push ]

jobs:
  tests:

    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        wp-versions: [ 4.9, master ]
        php-versions: [ 5.6, 7.4 ]

    name: WP ${{ matrix.wp-versions }} on PHP ${{ matrix.php-versions }}

    env:
      php-ini-values: post_max_size=256M
      wp-bp-directory: src/wp-content/plugins/buddypress
      MYSQL_DATABASE: wordpress_test
      MYSQL_USER: root
      MYSQL_PASSWORD: ''
      MYSQL_HOST: '127.0.0.1'

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Cancel previous runs of this workflow
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout WordPress
        uses: actions/checkout@v2
        with:
          repository: WordPress/wordpress-develop
          ref: ${{ matrix.wp-versions }}
          path: ''

      - name: Checkout BuddyPress
        uses: actions/checkout@v2
        with:
          path: ${{ env.wp-bp-directory }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          tools: pecl
          php-version: ${{ matrix.php-versions }}
          ini-values: ${{ env.php-ini-values }}
        env:
          update: true

      - name: Get Composer cache directory
        working-directory: ${{ env.wp-bp-directory }}
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        working-directory: ${{ env.wp-bp-directory }}
        run: composer install --prefer-dist --no-progress --ansi

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12.16.0

      - name: Cache NodeJS modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Node dependencies
        working-directory: ${{ env.wp-bp-directory }}
        run: npm ci

      - name: Install phpunit 5.x
        if: ${{ matrix.php-versions == '5.6' }}
        run: |
          composer global require --dev phpunit/phpunit ^5 --prefer-dist --no-progress --ansi
          phpunit --version

      - name: Install phpunit 6.x
        if: ${{ matrix.php-versions == '7.4' }}
        run: |
          composer global require --dev phpunit/phpunit ^6 --prefer-dist --no-progress --ansi
          phpunit --version

      - name: Set up tests config
        run: |
          cp wp-tests-config-sample.php wp-tests-config.php
          sed -i "s/youremptytestdbnamehere/${{ env.MYSQL_DATABASE }}/" wp-tests-config.php
          sed -i "s/yourusernamehere/${{ env.MYSQL_USER }}/" wp-tests-config.php
          sed -i "s/yourpasswordhere/${{ env.MYSQL_PASSWORD }}/" wp-tests-config.php
          sed -i "s/localhost/${{ env.MYSQL_HOST }}/" wp-tests-config.php

      - name: Run phpunit tests
        working-directory: ${{ env.wp-bp-directory }}
        run: phpunit

